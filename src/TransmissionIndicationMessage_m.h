//
// Generated file, do not edit! Created by nedtool 5.0 from TransmissionIndicationMessage.msg.
//

#ifndef __TRANSMISSIONINDICATIONMESSAGE_M_H
#define __TRANSMISSIONINDICATIONMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>TransmissionIndicationMessage.msg:2</tt> by nedtool.
 * <pre>
 * packet TransmissionIndicationMessage
 * {
 * }
 * </pre>
 */
class TransmissionIndicationMessage : public ::omnetpp::cPacket
{
  protected:

  private:
    void copy(const TransmissionIndicationMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TransmissionIndicationMessage&);

  public:
    TransmissionIndicationMessage(const char *name=nullptr, int kind=0);
    TransmissionIndicationMessage(const TransmissionIndicationMessage& other);
    virtual ~TransmissionIndicationMessage();
    TransmissionIndicationMessage& operator=(const TransmissionIndicationMessage& other);
    virtual TransmissionIndicationMessage *dup() const {return new TransmissionIndicationMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TransmissionIndicationMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TransmissionIndicationMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __TRANSMISSIONINDICATIONMESSAGE_M_H

